# -*- coding: utf-8 -*-
"""
Created on Thu Jul  8 11:13:54 2021

@author: Marijn Venderbosch

This script loads a mat file and finds the camera frame raw data from it.
"""

import numpy as np
import scipy.io

def load_and_save(mat_file):
    mat_file = scipy.io.loadmat(mat_file)
    
    # the cam_frame entry contains the raw camera data
    cam_frame = mat_file['cam_frame']
    
    """Crop the camera window to the region of interest, such that the dimensions
    match the screenshot that is saved as well"""
    # the coordinates used to crop the screenshot are stored in the .mat directory
    # coordinates need to convert from a 1x1 array to an integer
    cam_x_min = int(mat_file['cam_x_min'])
    cam_x_max = int(mat_file['cam_x_max'])

    cam_y_min = int(mat_file['cam_y_min'])
    cam_y_max = int(mat_file['cam_y_max'])
    
    # cropping the array using the provided coordinates
    cam_frame_cropped = cam_frame[cam_x_min : cam_x_max , cam_y_min : cam_y_max]
    
    # save
    np.save('cam_frame_array_cropped', cam_frame_cropped)
 
# execute function. Insert in brackets the .mat filename
load_and_save('filename.mat')
