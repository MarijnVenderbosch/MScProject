# -*- coding: utf-8 -*-
"""
Created on Wed Jul  7 17:52:51 2021

@author: Marijn Venderbosch

Description: this  script computes a discrete laplacian of Gaussian kernel
"""

import numpy as np
import matplotlib.pyplot as plt

# Kernel size, has to be odd (symmetry)
kernel_dimension = 9
sigma = 1.4

def discrete_kernel(d, sigma):
    
    # d is dimension, sigma standard deviation
    x = np.linspace(-(d - 1) / 2, (d - 1) / 2, d)
    xx, yy = np.meshgrid(x, x)
    
    prefactor = -1 / (np.pi * sigma**4)
    exponent = 1 / (2 * sigma**2) * (xx**2 + yy**2)
    kernel = np.exp(-exponent) * (1 - exponent)
           
    return kernel

kernel_9by9 = discrete_kernel(kernel_dimension, sigma)

plt.imshow(kernel_9by9)


